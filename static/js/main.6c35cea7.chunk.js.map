{"version":3,"sources":["components/Home/Home.js","utils/classNames.js","components/About/About.js","components/Experience/Experience.js","components/Education/Education.js","components/Contact/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Home","id","className","onClick","document","getElementById","scrollIntoView","behavior","block","inline","src","alt","takeZeroeth","R","takeFirst","takeWithFirstTrue","getTruthfulKeys","classNames","args","classes","concat","arguments","reduce","acc","val","push","getClasses","join","About","navRef","React","createRef","handleClick","e","show","target","innerText","toLowerCase","window","onscroll","navbar","pageYOffset","current","offsetTop","classList","add","remove","handleOnScroll","name","href","rel","ref","style","display","flexBasis","Experience","Education","Contact","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6c35cea7.chunk.js","sourcesContent":["import React from 'react';\nimport './Home.scss';\n\nconst Home = () =>{\n    const handleClick = () =>{\n        document.getElementById(\"about\").scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"nearest\"});\n    }\n    return(\n        <div id='home' className='headContainer'>\n            <div className='headerWrapper'>\n                <div className='headFLine'>Hello, I'm <span>Himanshu Kumar.</span></div>\n                <div className='headSLine'>I'm a full-stack web developer.</div> \n                <div className='viewWork' onClick={handleClick} > View my work <img src='./icons/right-arrow.svg' alt='right-arrow'></img></div>\n             </div>\n        </div>\n    )\n}\n\nexport default Home;","import * as R from \"ramda\";\n\n\nlet takeZeroeth = R.nth(0);\nlet takeFirst = R.nth(1);\nlet takeWithFirstTrue = R.filter(takeFirst);\nconst getTruthfulKeys = R.compose(\n  R.map(takeZeroeth),\n  takeWithFirstTrue,\n  R.toPairs\n);\n/**\n * It accepts strings, objects as arg and returns class string\n * e.g\n * 1. classNames('c1', 'c2', 'c3') => 'c1 c2 c3'\n * 2. classNames('c1', {c2: true, c3: false}) => 'c1 c2'\n * @returns {string}\n */\n\n// type IArgType = string | ({ [key: string]: boolean });\nconst classNames = function (...args) {\n  const classes = []\n    .concat(...arguments)\n    .reduce((acc, val) => {\n      if (typeof val === \"string\") acc.push(val);\n      else if (typeof val === \"object\") {\n        const getClasses = R.compose(\n          R.concat(acc),\n          getTruthfulKeys\n        );\n        return getClasses(val);\n      }\n      return acc;\n    }, []);\n  return classes.join(\" \");\n};\n\nexport default classNames;\n","import React from 'react';\nimport classNames from '../../utils/classNames';\n\nimport './About.scss';\n\nconst About  = () =>{\n    const navRef = React.createRef();\n    const handleOnScroll = () => {\n        let navbar = document.getElementById(\"navbar\");\n        if (window.pageYOffset > navRef.current.offsetTop) {\n            navbar.classList.add(\"sticky\");\n        } else {\n            navbar.classList.remove(\"sticky\");\n        }\n    }\n    const handleClick = (e) =>{\n        let show = e.target.innerText.toLowerCase();\n        document.getElementById(show).scrollIntoView({behavior: \"smooth\", block: \"start\", inline: \"nearest\"});\n        // e.target.classList.add(\"active\");\n        // console.log(e.target);\n    }\n    window.onscroll = () =>{\n        handleOnScroll();\n    }\n    return (\n        <div id='about' className='aboutContainer'>\n            <div id='navbar' className='navbar'>\n                <div className='navBarContainer'>\n                    <div name='home' className={classNames('home',{'active':true})} onClick={handleClick}>Home</div>\n                    <div name='about' className='about' onClick={handleClick}>About</div>\n                    <div name='experience' className='experience' onClick={handleClick}>Experience</div>\n                    <div name='education' className='education' onClick={handleClick}>Education</div>\n                    <a className='resume' href='https://drive.google.com/file/d/1RENgWHxglsc0Ewln-ELbdze6ijnhU1Fg/view' rel=\"noopener noreferrer\" target='_blank'>Resume</a>\n                    <div name='contact' className='contact' onClick={handleClick}>Contact</div>\n                </div>\n            </div>\n            <div  className='aboutbody'>\n                <h1 className='aboutTitle' ref={navRef}>About</h1>\n                <div className='skills'>\n                    <div className='fast'>\n                        <div>Fast</div>\n                        <div>Fast load times and lag free interaction, my highest priority.</div>\n                    </div>\n                    <div className='responsive'>\n                        <div>Responsive</div>\n                        <div>My layouts will work on any device, big or small.</div>\n                    </div>\n                    <div className='intuitive'>\n                        <div>Intuitive</div>\n                        <div>Strong preference for easy to use, intuitive UX/UI.</div>\n                    </div>\n                    <div className='dynamic'>\n                        <div>Dynamic</div>\n                        <div>Websites don't have to be static, I love making pages come to life.</div>\n                    </div>\n                </div>\n            </div>\n            <div className='aboutskills'>\n                <img className='profilePic' src='./icons/pp.jpg' alt='profilePic'></img>\n                <ul className='skillset'>\n                    <li>\n                        <div>css</div>\n                        <div style={{display:\"flex\",flexBasis:\"45%\"}}></div>\n                        <div className='percentage'>60%</div>\n                    </li>\n                    <li>\n                        <div>Html</div>\n                        <div style={{display:\"flex\",flexBasis:\"52.5%\"}}></div>\n                        <div className='percentage'>70%</div>\n                    </li>\n                    <li>\n                        <div>React</div>\n                        <div style={{display:\"flex\",flexBasis:\"60%\"}}></div>\n                        <div className='percentage'>80%</div>\n                    </li>\n                    <li>\n                        <div>Javascript</div>\n                        <div style={{display:\"flex\",flexBasis:\"60%\"}}></div>\n                        <div className='percentage'>80%</div>    \n                    </li>\n                    <li>\n                        <div>Nodejs</div>\n                        <div style={{display:\"flex\",flexBasis:\"37.5%\"}}></div>\n                        <div className='percentage'>50%</div>    \n                    </li>\n                    <li>\n                        <div>Data structures</div>\n                        <div style={{display:\"flex\",flexBasis:\"67.5%\"}}></div>\n                        <div className='percentage'>90%</div>\n                    </li>\n                    <li>\n                        <div>Algorithms</div>\n                        <div style={{display:\"flex\",flexBasis:\"63.75%\"}}></div>\n                        <div className='percentage'>85%</div>\n                    </li>\n                    <li>\n                        <div>C++</div>\n                        <div style={{display:\"flex\",flexBasis:\"67.5%\"}}></div>\n                        <div className='percentage'>90%</div>\n                    </li>\n                    <li>\n                        <div>c</div>\n                        <div style={{display:\"flex\",flexBasis:\"67.5%\"}}></div>\n                        <div className='percentage'>90%</div>\n                    </li>\n                    <li>\n                        <div>UI design</div>\n                        <div style={{display:\"flex\",flexBasis:\"52.5%\"}}></div>\n                        <div className='percentage' >70%</div>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    )\n}\nexport default About;","import React from 'react';\nimport './Experience.scss';\n\nconst Experience = () => {\n    return(\n        <div id='experience' className='expContainer'>\n            <h1 className='expTitle'>Experience</h1>\n            <ul>\n                <li>\n                    <div className='exp1'>\n                        <img src='./icons/paytm.jpg' alt='paytm'></img>\n                        <div className='year'>Jul, 2019 - present</div>\n                    </div>\n                    <div className='role1'> Software Engineer </div>\n                </li>\n            </ul>\n        </div>\n    )\n}\nexport default Experience;\n","import React from 'react';\nimport './Education.scss';\n\nconst Education = () => {\n    return(\n        <div id='education' className='eduContainer'>\n            <h1 className='eduTitle'>Education</h1>\n            <ul>\n                <li>\n                    <div className='edu1'>\n                        <img src='./icons/bitnesra.png' alt='BitMesra'></img>\n                        <div className='year'>Birla Institute Of Technology, Mesra(2015-2019)</div>\n                    </div>\n                    <div className='clg1'> B.E in Computer Science and Engineering (CGPA :- 8.35) </div>\n                </li>\n                <li>\n                    <div className='edu1'>\n                        <img src='./icons/dav.png' alt='BitMesra'></img>\n                        <div className='year'>M.K. DAV Public School, Daltonganj(2012-2014)</div>\n                    </div>\n                    <div className='clg1'> Senior Secondary Education (Result:- 93.8 %) </div>\n                </li>\n            </ul>\n        </div>\n    )\n}\nexport default Education;\n","import React from 'react';\nimport './Contact.scss';\n\nconst Contact = () =>{\n    return(\n        <div id='contact' className='contactContainer'>\n            <h1 className='contTitle'>Contact</h1>\n            <div className='contactList'>\n                <div className='linkedin'>\n                    <img src='./icons/linkedin.jpg' alt='linkedin'></img>\n                    <a href='https://linkedin.com/in/himanshu-kumar-498791147' target='_blank' rel=\"noopener noreferrer\">https://linkedin.com/in/himanshu-kumar-498791147</a>\n                </div>\n                <div className='github'>\n                    <img src='./icons/github.png' alt='github'></img>\n                    <a href='https://github.com/Himanshu-1997' target='_blank' rel=\"noopener noreferrer\">https://github.com/Himanshu-1997</a>\n                </div>\n                <div className='facebook'>\n                    <img src='./icons/fb.jpg' alt='fb'></img>\n                    <a href='https://www.facebook.com/himanshu.kumar.in' target='_blank' rel=\"noopener noreferrer\">https://www.facebook.com/himanshu.kumar.in</a>\n                </div>\n                <div className='gmail'>\n                    <img src='./icons/gmail.png' alt='gmail'></img>\n                    <div>himanshu28051997@gmail.com</div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Contact;","import React from 'react';\nimport './App.css';\nimport Home from './components/Home/Home';\nimport About from './components/About/About';\nimport Experience  from './components/Experience/Experience';\nimport Education from './components/Education/Education';\nimport Contact from './components/Contact/Contact';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home/>\n      <About/>\n      <Experience/>\n      <Education/>\n      <Contact/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}